// Mocks generated by Mockito 5.4.6 from annotations
// in ecommerce_app/test/features/chat/data/repositories/chat_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:ecommerce_app/features/chat/data/datasources/chat_remote_data_source.dart'
    as _i3;
import 'package:ecommerce_app/features/chat/data/models/chat_model.dart' as _i2;
import 'package:ecommerce_app/features/chat/data/models/message_model.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeChatModel_0 extends _i1.SmartFake implements _i2.ChatModel {
  _FakeChatModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ChatRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRemoteDataSource extends _i1.Mock
    implements _i3.ChatRemoteDataSource {
  MockChatRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.ChatModel>> getChats(String? userId, String? authToken) =>
      (super.noSuchMethod(
            Invocation.method(#getChats, [userId, authToken]),
            returnValue: _i4.Future<List<_i2.ChatModel>>.value(
              <_i2.ChatModel>[],
            ),
          )
          as _i4.Future<List<_i2.ChatModel>>);

  @override
  _i4.Future<_i2.ChatModel> getChatById(String? chatId, String? authToken) =>
      (super.noSuchMethod(
            Invocation.method(#getChatById, [chatId, authToken]),
            returnValue: _i4.Future<_i2.ChatModel>.value(
              _FakeChatModel_0(
                this,
                Invocation.method(#getChatById, [chatId, authToken]),
              ),
            ),
          )
          as _i4.Future<_i2.ChatModel>);

  @override
  _i4.Future<List<_i5.MessageModel>> getMessages(
    String? chatId,
    String? authToken,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMessages, [chatId, authToken]),
            returnValue: _i4.Future<List<_i5.MessageModel>>.value(
              <_i5.MessageModel>[],
            ),
          )
          as _i4.Future<List<_i5.MessageModel>>);

  @override
  _i4.Future<_i2.ChatModel> initiateChat(String? userId, String? authToken) =>
      (super.noSuchMethod(
            Invocation.method(#initiateChat, [userId, authToken]),
            returnValue: _i4.Future<_i2.ChatModel>.value(
              _FakeChatModel_0(
                this,
                Invocation.method(#initiateChat, [userId, authToken]),
              ),
            ),
          )
          as _i4.Future<_i2.ChatModel>);

  @override
  _i4.Future<void> deleteChat(String? chatId, String? authToken) =>
      (super.noSuchMethod(
            Invocation.method(#deleteChat, [chatId, authToken]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
