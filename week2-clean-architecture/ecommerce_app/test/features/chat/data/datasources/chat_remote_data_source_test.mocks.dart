// Mocks generated by Mockito 5.4.6 from annotations
// in ecommerce_app/test/features/chat/data/datasources/chat_remote_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:ecommerce_app/core/utils/chat_api_service.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ChatApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatApiService extends _i1.Mock implements _i3.ChatApiService {
  MockChatApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  String get baseUrl =>
      (super.noSuchMethod(
            Invocation.getter(#baseUrl),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#baseUrl),
            ),
          )
          as String);

  @override
  _i5.Future<List<dynamic>> getChats(String? userId, String? authToken) =>
      (super.noSuchMethod(
            Invocation.method(#getChats, [userId, authToken]),
            returnValue: _i5.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i5.Future<List<dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> getChatById(
    String? chatId,
    String? authToken,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getChatById, [chatId, authToken]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<List<dynamic>> getMessages(String? chatId, String? authToken) =>
      (super.noSuchMethod(
            Invocation.method(#getMessages, [chatId, authToken]),
            returnValue: _i5.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i5.Future<List<dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> initiateChat(
    String? userId,
    String? authToken,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#initiateChat, [userId, authToken]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<void> deleteChat(String? chatId, String? authToken) =>
      (super.noSuchMethod(
            Invocation.method(#deleteChat, [chatId, authToken]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
